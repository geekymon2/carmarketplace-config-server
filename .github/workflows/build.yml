name: build and deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  buildservice:
    name: build & test
    runs-on: ubuntu-latest
    steps:
    - name: generate buildnumber
      id: buildnumber
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}  
    - name: checkout root  
      uses: actions/checkout@v2
      with:
        repository: geekymon2/carmarketplace
        path: root
    - name: checkout service
      uses: actions/checkout@v2     
      with:
        path: service
    - name: read docker properties
      uses: madhead/read-java-properties@latest
      id: docker
      with:
        file: service/docker.properties
        all: true           
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven 
    - name: build root
      run: mvn -N install --file root/pom.xml
    - name: build service
      run: mvn -B test package jacoco:report --file service/pom.xml -Dspring.profiles.active=test
    - name: Upload to codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: service/coverage/reports/
        verbose: true    
    - name: dockerhub login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: push docker image
      uses: docker/build-push-action@v2
      with:
        context: ./service
        push: true
        tags: |
          geekymon2/${{ steps.docker.outputs.IMAGE_NAME }}:${{ steps.docker.outputs.MAJOR_VERSION }}.${{ steps.docker.outputs.MINOR_VERSION }}.${{ steps.buildnumber.outputs.build_number }}
          geekymon2/${{ steps.docker.outputs.IMAGE_NAME }}:latest
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          ARTIFACT_NAME=${{ steps.docker.outputs.ARTIFACT_NAME }}
    - name: Docker Hub Description
      uses: peter-evans/dockerhub-description@v2
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKERHUB_REPOSITORY: geekymon2/${{ steps.docker.outputs.IMAGE_NAME }}   
        README_FILEPATH: service/README.md   
  
  deployserviceci:
    name: deploy CI
    runs-on: [self-hosted, ci]
    steps:
    - name: checkout service
      uses: actions/checkout@v2 
      with:
        path: service
    - name: read docker properties
      uses: madhead/read-java-properties@latest
      id: docker
      with:
        file: service/docker.properties
        all: true
    - name: apply CI environment profile
      run: printf "ENVIRONMENT=ci\nSPRING_PROFILES_ACTIVE=ci\nCONFIG_SERVER_ENCRYPT_KEY=%s" ${{ secrets.CONFIG_SERVER_ENCRYPT_KEY }},  >> service/.env
    - name: load env
      uses: c-py/action-dotenv-to-setenv@v2
      with:
        env-file: service/.env
    - name: first stop containers
      working-directory: ./service
      run: docker-compose -f "docker-compose.yml" stop     
    - name: pull the latest image from dockerhub
      run: docker pull geekymon2/${{ steps.docker.outputs.IMAGE_NAME }}
    - name: start docker compose
      working-directory: ./service
      run: docker-compose -f "docker-compose.yml" up -d
    needs: buildservice

  deployservicesit:
    name: deploy SIT
    runs-on: [self-hosted, sit]
    steps:
    - name: checkout service
      uses: actions/checkout@v2     
      with:
        path: service
    - name: read docker properties
      uses: madhead/read-java-properties@latest
      id: docker
      with:
        file: service/docker.properties
        all: true
    - name: apply SIT environment profile
      run: printf "ENVIRONMENT=sit\nSPRING_PROFILES_ACTIVE=sit\nCONFIG_SERVER_ENCRYPT_KEY=%s" ${{ secrets.CONFIG_SERVER_ENCRYPT_KEY }},  >> service/.env
    - name: load env
      uses: c-py/action-dotenv-to-setenv@v2
      with:
        env-file: service/.env
    - name: first stop containers
      working-directory: ./service
      run: docker-compose -f "docker-compose.yml" stop
    - name: pull the latest image from dockerhub
      run: docker pull geekymon2/${{ steps.docker.outputs.IMAGE_NAME }}
    - name: start docker compose
      working-directory: ./service
      run: docker-compose -f "docker-compose.yml" up -d
    needs: buildservice